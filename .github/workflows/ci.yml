name: CI

on:
    push:
        branches: [master]
    pull_request:
        branches: [master]

concurrency:
    group: CI
    cancel-in-progress: true

jobs:
    lint:
        runs-on: ubuntu-latest
        steps:
            - name: Checkout Code
              uses: actions/checkout@v2
            - name: Setup Node, Yarn, and NPM
              uses: actions/setup-node@v2
              with:
                  node-version: '16'
                  cache: 'yarn'
            - name: Setup Docker
              uses: docker/setup-buildx-action@v1
              id: buildx
              with:
                  install: true
            - name: Install Dependencies
              run: yarn
            - name: Lint App
              run: yarn run lint
    build:
        runs-on: ubuntu-latest
        needs: lint
        steps:
            - name: Checkout Code
              uses: actions/checkout@v2
            - name: Setup Node, Yarn, and NPM
              uses: actions/setup-node@v2
              with:
                  node-version: '16'
                  cache: 'yarn'
            - name: Setup Docker
              uses: docker/setup-buildx-action@v1
              id: buildx
              with:
                  install: true
            - name: Install Dependencies
              run: yarn
            - name: Build App
              run: yarn run build:output
            - name: Compress Build Artifact
              run: tar -zcvf dist.tar.gz dist
            - name: Upload Build Artifact
              uses: actions/upload-artifact@v2
              with:
                  name: dist.tar.gz
                  path: dist.tar.gz
    test:
        runs-on: ubuntu-latest
        needs: build
        steps:
            - name: Checkout Code
              uses: actions/checkout@v2
            - name: Setup Node, Yarn, and NPM
              uses: actions/setup-node@v2
              with:
                  node-version: '16'
                  cache: 'yarn'
            - name: Setup Docker
              uses: docker/setup-buildx-action@v1
              id: buildx
              with:
                  install: true
            - name: Install Dependencies
              run: yarn
            - name: Test App
              run: yarn run test:output
            - name: Compress Test Artifact
              run: tar -zcvf coverage.tar.gz coverage
            - name: Upload Test Artifact
              uses: actions/upload-artifact@v2
              with:
                  name: coverage.tar.gz
                  path: coverage.tar.gz
            - name: Generate Code Coverage Summary Report
              uses: irongut/CodeCoverageSummary@v1.1.0
              with:
                  filename: coverage/cobertura-coverage.xml
                  badge: true
                  format: 'markdown'
                  output: 'both'
            - name: Add Code Coverage PR Comment
              uses: marocchino/sticky-pull-request-comment@v2
              if: github.event_name == 'pull_request' && github.actor != 'dependabot[bot]'
              with:
                  recreate: true
                  path: code-coverage-results.md
    release:
        runs-on: ubuntu-latest
        needs: test
        env:
            GITHUB_TOKEN: ${{ github.token }}
        steps:
            - name: Checkout Code
              uses: actions/checkout@v2
            - name: Setup Node, Yarn, and NPM
              uses: actions/setup-node@v2
              with:
                  node-version: '16'
                  cache: 'yarn'
            - name: Install Dependencies
              run: yarn
            - name: Download Build Artifact
              uses: actions/download-artifact@v2
              with:
                  name: dist.tar.gz
                  path: dist.tar.gz
            - name: Create Semantic GitHub Release
              run: yarn run release
